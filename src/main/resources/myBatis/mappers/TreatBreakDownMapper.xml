<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="TreatBreakDownMapper">
  <insert id="setWrite" parameterType="TreatBreakDownVO">
  	insert into treatbreakdown values(treatbreakdown_seq.nextval, #{id},#{num},#{pnum},#{status},#{paystatus},null,#{contents},to_date(#{reserve_date},'YYYY-MM-DD HH24:MI'),sysdate)
  </insert>
  
  <!--진료 갯수  -->
  <select id="getOneTotalCount" parameterType="TreatBreakDownVO" resultType="Integer">
  	select count(num) from treatbreakdown where id=#{id}
  </select>
  
  <select id="getOneList" parameterType="PageMaker" resultType="TreatBreakDownVO">
  	select * from
  	(select rownum R,Tr.* from
  	(select T.*, M.name from treatbreakdown T
  	FULL JOIN member M on (T.id = M.id)
  	where T.id=#{kind} order by T.tnum desc) Tr)
  	where R between #{startRow} and #{lastRow}
  </select>
	
	<update id="setUpdate" parameterType="TreatBreakDownVO">
		update treatbreakdown set status=#{status} where tnum=#{tnum}
	</update>
	
	<!--관리자 출력용  -->
	<select id="getAllTotalCount" resultType="Integer">
  	select count(num) from treatbreakdown
  	</select>
  	
  	
  	<resultMap type="TreatBreakDownVO" id="BreakList">
	  	<id property="tnum" column="tnum"/>
	  	<result property="id" column="id"/>
	  	<result property="num" column="num"/>
	  	<result property="pnum" column="pnum"/>
	  	<result property="status" column="status"/>
	  	<result property="paystatus" column="paystatus"/>
	  	<result property="treat_date" column="treat_date"/>
	  	<result property="contents" column="contents"/>
	  	<result property="reserve_date" column="reserve_date"/>
	  	<result property="apply_date" column="apply_date"/>
	  	<result property="name" column="name"/>
	  	<result property="phone" column="phone"/>
  	</resultMap>
  	
  	
  	<select id="getAllList" parameterType="PageMaker" resultMap="BreakList">
  	select * from
  	(select rownum R,Tr.* from
  	(select T.*, M.name,M.phone from treatbreakdown T
  	INNER JOIN member M on (T.id = M.id)
  	where
  	<choose>
		<when test="kind ==1">
			M.name
		</when>
		<when test="kind ==2">
			T.contents
		</when>
		<otherwise>
			M.name
		</otherwise>
	</choose>
  	like '%'|| #{search} ||'%'
  	 order by T.tnum desc) Tr)
  	where R between #{startRow} and #{lastRow}
  </select>
  	
  </mapper>